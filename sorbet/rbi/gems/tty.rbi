# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/tty/all/tty.rbi
#
# tty-0.5.0

module TTY
  def self.included(base); end
  extend TTY::ClassMethods
end
module TTY::Delegatable
  def define_delegatable_method(source, method); end
  def delegatable_method(source, *methods); end
end
module TTY::Coercion
  def coerce_to(object, cls, method); end
end
module TTY::Unicode
  def as_unicode; end
  def clean_utf8(string); end
  def utf8?(string); end
end
class TTY::Terminal
  def home; end
  def initialize(options = nil); end
end
class TTY::System
  def self.editor; end
end
class TTY::Vector
  def [](indx); end
  def []=(indx, value); end
  def at(indx); end
  def compare?(comparator, other); end
  def each; end
  def element(indx); end
  def elements; end
  def empty?; end
  def hash; end
  def initialize(array = nil); end
  def inspect; end
  def length; end
  def self.[](*array); end
  def set_element(indx, value); end
  def size; end
  def to_a; end
  def to_ary; end
  extend Equatable
  include Enumerable
  include Equatable::Methods
end
class TTY::Logger
  def compare?(comparator, other); end
  def hash; end
  def initialize(options = nil); end
  def inspect; end
  def level; end
  def level=(level); end
  def log(message); end
  def namespace; end
  def output; end
  def self.valid_level?(level); end
  def timestamp; end
  def timestamp_format; end
  def validate_level(level); end
  extend Equatable
  include Equatable
  include Equatable::Methods
end
class TTY::Plugins
  def find; end
  def initialize; end
  def load; end
  def loaded?(name); end
  def names; end
  def plugins; end
  def plugins=(arg0); end
  def register(name, plugin = nil); end
end
class TTY::Plugin
  def enabled; end
  def enabled=(arg0); end
  def enabled?; end
  def gem; end
  def gem_name; end
  def initialize(name, gem); end
  def load!; end
  def name; end
end
class TTY::Terminal::Home
  def find_home; end
  def initialize(platform = nil); end
  def unix_home; end
  def windows_home; end
end
class TTY::System::Editor
  def build; end
  def escape_file; end
  def file; end
  def initialize(file); end
  def invoke; end
  def self.available(*commands); end
  def self.command(*commands); end
  def self.executables; end
  def self.open(file); end
end
class TTY::TypeError < ArgumentError
end
class TTY::NoImplementationError < NotImplementedError
end
class TTY::ValidationCoercion < TTY::TypeError
end
class TTY::UnknownAttributeError < IndexError
end
class TTY::CommandInvocationError < StandardError
end
module TTY::ClassMethods
  def plugins; end
  def system; end
  def terminal; end
end
